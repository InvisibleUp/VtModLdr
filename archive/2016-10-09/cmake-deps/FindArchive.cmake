# - find ARCHIVE 3
# ARCHIVE_INCLUDE_DIR - Where to find ARCHIVE 3 header files (directory)
# ARCHIVE_LIBRARIES - ARCHIVE 3 libraries
# ARCHIVE_LIBRARY_RELEASE - Where the release library is
# ARCHIVE_LIBRARY_DEBUG - Where the debug library is
# ARCHIVE_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( ARCHIVE_INCLUDE_DIR AND ARCHIVE_LIBRARY_RELEASE AND ARCHIVE_LIBRARY_DEBUG )
    SET(ARCHIVE_FIND_QUIETLY TRUE)
ENDIF( ARCHIVE_INCLUDE_DIR AND ARCHIVE_LIBRARY_RELEASE AND ARCHIVE_LIBRARY_DEBUG )

FIND_PATH( ARCHIVE_INCLUDE_DIR ARCHIVE.h  )

FIND_LIBRARY(ARCHIVE_LIBRARY_RELEASE NAMES ARCHIVE )

FIND_LIBRARY(ARCHIVE_LIBRARY_DEBUG NAMES ARCHIVE ARCHIVEd  HINTS /usr/lib/debug/usr/lib/ )

IF( ARCHIVE_LIBRARY_RELEASE OR ARCHIVE_LIBRARY_DEBUG AND ARCHIVE_INCLUDE_DIR )
        SET( ARCHIVE_FOUND TRUE )
ENDIF( ARCHIVE_LIBRARY_RELEASE OR ARCHIVE_LIBRARY_DEBUG AND ARCHIVE_INCLUDE_DIR )

IF( ARCHIVE_LIBRARY_DEBUG AND ARCHIVE_LIBRARY_RELEASE )
        # if the generator supports configuration types then set
        # optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
        IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
                SET( ARCHIVE_LIBRARIES optimized ${ARCHIVE_LIBRARY_RELEASE} debug ${ARCHIVE_LIBRARY_DEBUG} )
        ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
    # then just use the release libraries
                SET( ARCHIVE_LIBRARIES ${ARCHIVE_LIBRARY_RELEASE} )
        ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( ARCHIVE_LIBRARY_RELEASE )
        SET( ARCHIVE_LIBRARIES ${ARCHIVE_LIBRARY_RELEASE} )
ELSE( ARCHIVE_LIBRARY_DEBUG AND ARCHIVE_LIBRARY_RELEASE )
        SET( ARCHIVE_LIBRARIES ${ARCHIVE_LIBRARY_DEBUG} )
ENDIF( ARCHIVE_LIBRARY_DEBUG AND ARCHIVE_LIBRARY_RELEASE )

IF( ARCHIVE_FOUND )
        IF( NOT ARCHIVE_FIND_QUIETLY )
                MESSAGE( STATUS "Found ARCHIVE header file in ${ARCHIVE_INCLUDE_DIR}")
                MESSAGE( STATUS "Found ARCHIVE libraries: ${ARCHIVE_LIBRARIES}")
        ENDIF( NOT ARCHIVE_FIND_QUIETLY )
ELSE(ARCHIVE_FOUND)
        IF( ARCHIVE_FIND_REQUIRED)
                MESSAGE( FATAL_ERROR "Could not find ARCHIVE" )
        ELSE( ARCHIVE_FIND_REQUIRED)
                MESSAGE( STATUS "Optional package ARCHIVE was not found" )
        ENDIF( ARCHIVE_FIND_REQUIRED)
ENDIF(ARCHIVE_FOUND)