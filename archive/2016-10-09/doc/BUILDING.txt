Setting up the build environment.
===

This program uses standard C89, so which compiler you use really shouldn't matter.
(For the record, I'm using Borland C++ 5.5. The *only* reason for that is Windows 95
compatibility. If you're compiling for more contemporary systems please don't use that.)

You will require the standard Windows headers. As this uses raw Win32, you do
not need MFC or .NET or anything else. The standard Windows headers are included
with all major compilers, including MinGW, Visual C++ and Borland C++.

In addition, you will need to be able to compile resource files. MinGW currently
does not have full support for resource files, so do not use that compiler.

##External Dependencies
There are two external dependencies. They are Jansson, a JSON parser, and SQLite3,
an embedded database. Both of them do not require any dependencies of their own.

###Borland C++ 5.5

For Jansson, you will need the source code and CMake.
1. Extract the source code and open the folder in the CMake GUI. Set the Binary
   location to the source directory + "/bin". Press Configure.
   When prompted for a generator, select "Borland Makefiles" with "Use Default
   Native Compilers" selected. Let it work out what the compiler is capable of.
   Click "Generate" to produce header files.
   
2. When that is done, close CMake and navigate to /bin/include. There should
   be two *.h files. Put these in the INCLUDE folder in Borland's installation
   directory.
   
3. Either obtain a copy of jansson.dll from another program on your computer or
   compile it with a more modern compiler. Do not attempt to compile it with
   Borland. It won't work.
   
4. In the directory with jansson.dll is located run 
   "implib -a -c -f jansson.lib jansson.dll"
   This will generate jansson.lib. Place this in the LIB folder in Borland's
   installation directory.
   
5. Place jansson.dll in the folder where the Sonic R Mod Loader binary will be
   located.
   
For SQLite, you will need the source code and the .DLL from the SQLite3 site.
1. Extract the source code. There should be two *.h files. Put these in the
   INCLUDE folder in Borland's installation directory.
   
2. Extract the .DLL. Run 
   "implib -a -c -f sqlite3.lib sqlite3.dll"
   This will generate sqlite3.lib. Place this in the LIB folder in Borland's
   installation directory.
   
3. Place sqlite3.dll in the folder where the Sonic R Mod Loader binary will be
   located.
   
###MS Visual Studio 6.0

This is a rather old compiler, so you'll need some work-around hacks.

Download stdint.h (a C99 standard library) from 
http://www.azillionmonkeys.com/qed/pstdint.h. Place it in the "include" folder
in your Visual Studio install path.

(vsprintf?)

For Jansson, you will need the source code and CMake.
1. Extract the source code and open the folder in the CMake GUI. Set the Binary
   location to the source directory + "/bin". Press Configure.
   When prompted for a generator, select "Visual Studio 6" with "Use Default
   Native Compilers" selected. Let it work out what the compiler is capable of.
   
   DISABLE "USE_WINDOW_CRYPTOAPI". This will cause the library to not build.
   Click "Generate" to produce header files.
   
2. Edit /src/hashtable_seed.c and replace "SwitchToThread()" on line 260 to
   "Sleep(0)". (If you're using a newer version of Visual C++, you probably
   won't have to do this.)
   
3. Open "/bin/jansson.dsp" in Visual Studio.
   Set your Active Configuration to "BUILD_ALL - Release". Click "Rebuild All".
   With VC6, an error might appear about the missing reference to "__FUNCTION__".
   Ignore it.
   
4. Open /bin/lib/Release. Copy "jansson.lib" to your Visual Studio install
   directory.
   
5. Open /bin/include. Copy these header files to your Visual Studio install
   directory.
   
For sqlite3...
1. Extract the source code. There should be two *.h files. Put these in the
   INCLUDE folder in Visual C++'s installation directory.
   
2. Download the release DLL. Run LIB /DEF:sqlite3.def. Copy the resulting .lib
   to Visual C++'s installation directory.
   
3. Place sqlite3.dll in the folder where the Sonic R Mod Loader binary will be
   located.
   
Optionally, you could also build the LIB yourself using the source. I'm just
not entirely sure how to do that.